s ← •Import "strings.bqn"
ex‿in ← ins ← •FLines¨ "input/"⊸∾¨ "ex13.in"‿"13.in"

Parse ← {>¨ (¬⟨⟩⊸≡¨)⊸/¨ (+` ⟨⟩⊸≡¨)⊸⊔ 𝕩='#'}


R ← {∧´ ⥊ (𝕩↓𝕨) = (⌽𝕩↓𝕨)}
Rx ← {2 = +´ ⥊ (𝕩↓𝕨) ≠ (⌽𝕩↓𝕨)}
C ← {∧´ ⥊ (𝕩↓˘𝕨) = (⌽˘𝕩↓˘𝕨)}
Cx ← {2 = +´ ⥊ (𝕩↓˘𝕨) ≠ (⌽𝕩↓˘𝕨)}
T ← {/ 𝕩⊸Cx¨ ↕((1 ⊑ ≢ 𝕩)-1)}
U ← {/ 𝕩⊸Rx¨ ↕((⊑ ≢ 𝕩)-1)}


Nt ← {𝕩 + 2 ÷˜ 𝕩 -˜ 1⊸⊑≢ 𝕨}
Nu ← {𝕩 + 2 ÷˜ 𝕩 -˜ ⊑≢ 𝕨}

At ← {0⌈´ {(𝕩 = ⌊𝕩)×𝕩}¨ 𝕩⊸Nt¨ T 𝕩}
Au ← {0⌈´ {(𝕩 = ⌊𝕩)×𝕩}¨ 𝕩⊸Nu¨ U 𝕩}
Ru ← {((Au ⌽ 𝕩) > 0) × (⊑≢𝕩) - (Au ⌽ 𝕩)}
Rt ← {((At ⌽˘𝕩) > 0) × (1⊑≢𝕩) - (At ⌽˘ 𝕩)}
Calc ← {(⌈´⟨At 𝕩, Rt 𝕩⟩) + (100 × (⌈´⟨Au 𝕩, Ru 𝕩⟩))}
Part1 ← {Calc¨ (Parse 𝕩)}

WindowSize ← {2×1+↕⌊2÷˜⊑≢𝕩}
•Show¨ Part1 in

a ← 1 ⊑ Parse ex


Cx ← {2 = +´ ⥊ (𝕩↓𝕨) ≠ (⌽𝕩↓𝕨)}

a Cx ¯5